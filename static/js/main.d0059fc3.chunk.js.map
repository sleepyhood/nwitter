{"version":3,"sources":["myBase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","reportWebVitals.js","index.js"],"names":["authService","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","userObj","refreshUser","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","getMyNweets","a","q","query","collection","where","uid","getDocs","forEach","doc","console","log","id","data","useEffect","onSubmit","event","preventDefault","updateProfile","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","name","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","GithubAuthProvider","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","src","class","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","fileRef","uuidv4","uploadString","uploadFile","getDownloadURL","createdAt","Date","now","creatorId","addDoc","docRef","fileInput","useRef","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","current","faTimes","Home","nweets","setNweets","orderBy","happend","onSnapshot","querySnapshot","newArray","docs","map","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","Boolean","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0059fc3.chunk.js","sourcesContent":["// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\n// Add the Firebase products that you want to use\r\nimport { getAuth } from \"firebase/auth\";\r\nimport \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD7TPYIxWZnsMji2M24bTLZmaiG8tWF1pY\",\r\n  authDomain: \"nwitter-8922d.firebaseapp.com\",\r\n  projectId: \"nwitter-8922d\",\r\n  storageBucket: \"nwitter-8922d.appspot.com\",\r\n  messagingSenderId: \"97782376043\",\r\n  appId: \"1:97782376043:web:6278ef328086fbaa50b32e\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n// export const firebaseInstance = firebase;\r\nexport const authService = getAuth();\r\n\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();\r\n","import { authService, dbService } from \"myBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { collection, getDocs, query, where } from \"@firebase/firestore\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const getMyNweets = async () => {\r\n    const q = query(\r\n      collection(dbService, \"nweets\"),\r\n      where(\"creatorId\", \"==\", userObj.uid)\r\n    );\r\n\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      console.log(doc.id, \" => \", doc.data());\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // 5.1 기존 이름과 새로 바꾼이름이 다를 떄만 업데이트\r\n    // 프로필 이미지도 바꿀수 있음! 나중에 시도각\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(userObj, { displayName: newDisplayName });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            autoFocus\r\n            placeholder=\"Display Name\"\r\n            value={newDisplayName}\r\n            className=\"formInput\"\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Update Profile\"\r\n            className=\"formBtn\"\r\n            style={{\r\n              marginTop: 10,\r\n            }}\r\n          />\r\n        </form>\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"@firebase/auth\";\r\nimport { authService } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // 회원가입이 필요할 때\r\n        data = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // 로그인이 필요할 떄\r\n        data = await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n          required\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { authService } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\nimport \"firebase/auth\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  GithubAuthProvider,\r\n  GoogleAuthProvider,\r\n  signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n} from \"@firebase/auth\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n// 다음과 같이 정의를 해두면 자동import가 됨\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    const auth = getAuth();\r\n    // const providerGoogle = new GoogleAuthProvider();\r\n    // const providerGithub = new GithubAuthProvider();\r\n    try {\r\n      if (name === \"google\") {\r\n        provider = new GoogleAuthProvider();\r\n        const result = await signInWithPopup(authService, provider);\r\n        // const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n      } else if (name === \"github\") {\r\n        provider = new GithubAuthProvider();\r\n        const result = await signInWithPopup(authService, provider);\r\n        // const credential = GithubAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n      }\r\n\r\n      // const data = await signInWithPopup(provider);\r\n      // console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />{\" \"}\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>{\" \"}\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />{\" \"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"myBase\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport {\r\n  ref,\r\n  uploadString,\r\n  getDownloadURL,\r\n  deleteObject,\r\n} from \"@firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete?\");\r\n    if (ok) {\r\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\r\n      await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your nweet\"\r\n                  value={newNweet}\r\n                  required\r\n                  autoFocus\r\n                  onChange={onChange}\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>{\" \"}\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Nweet;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { dbService, storageService } from \"myBase\";\r\nimport { addDoc, collection } from \"firebase/firestore\";\r\nimport {\r\n  ref,\r\n  uploadString,\r\n  getDownloadURL,\r\n  deleteObject,\r\n} from \"@firebase/storage\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      //파일 경로 참조 만들기\r\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      //storage 참조 경로로 파일 업로드 하기\r\n      const uploadFile = await uploadString(fileRef, attachment, \"data_url\");\r\n      console.log(uploadFile);\r\n      //storage에 있는 파일 URL로 다운로드 받기\r\n      attachmentUrl = await getDownloadURL(uploadFile.ref);\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n\r\n    try {\r\n      const docRef = await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n      console.log(\"Document written with ID: \", docRef.id);\r\n    } catch (error) {\r\n      console.error(\"Error adding document: \", error);\r\n    }\r\n\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    // event내에 있는 target.value를 가져와라\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      // console.log(finishedEvent);\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    fileInput.current.value = \"\";\r\n    setAttachment(\"\");\r\n  };\r\n  const fileInput = useRef();\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      {/* 4.0 파일 업로드 */}\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n        ref={fileInput}\r\n      />\r\n      <input type=\"submit\" value=\"Nweet\" />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  collection,\r\n  orderBy,\r\n  onSnapshot,\r\n  getFirestore,\r\n  query,\r\n} from \"firebase/firestore\";\r\nimport Nweet from \"../components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\n// import firestore from \"@react-native-firebase/firestore\";\r\n// import \"../css/home.css\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  //   const getNweets = async () => {\r\n  //     const dbNweets = await getDocs(collection(dbService, \"nweets\"));\r\n  //     dbNweets.forEach((document) => {\r\n  //       console.log(document.data());\r\n  //       const nweetObject = { ...document.data(), id: document.id };\r\n  //       setNweets((prev) => [nweetObject, ...prev]);\r\n  //       // 이전 데이터 호출\r\n  //     });\r\n  // console.log(dbNweets);\r\n  //   };\r\n\r\n  // 3.4 snpshot를 통해 query를 쓰는것보다 실시간으로 빠르게 정보가 전달됨\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(getFirestore(), \"nweets\"),\r\n      orderBy(\"createdAt\", \"desc\")\r\n    );\r\n    const happend = onSnapshot(q, (querySnapshot) => {\r\n      const newArray = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(newArray);\r\n      console.log(newArray);\r\n    });\r\n    return () => {\r\n      happend();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj}></NweetFactory>\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          ></Nweet>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>{\" \"}\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n              <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n            {/* 로그아웃시 profile에 머물지 않고 Home로 이동하게 */}\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"myBase\";\nimport { updateProfile } from \"@firebase/auth\";\n\nfunction App() {\n  // 2.4 로그인과 회원가입 여부 판별, 로그인시 footer가 home\n  const [init, setInit] = useState(false);\n  //  1.2 로그인이 되있으면 home, 안되있으면 Auth\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        // setIsLoggedIn(true);\n        //5.2 user는 필요이상의 정보를 가진 object이기 떄문에, 필요한 정보만 이동\n        setUserObj(user);\n      } else {\n        // 6.0 로그아웃이 정상적으로 작동하기위해 조건문\n        setUserObj(null);\n      }\n\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    // setUserObj({\n    //   displayName: user.displayName,\n    //   uid: user.uid,\n    //   updateProfile: (args) => user.updateProfile(args),\n    // });\n    setUserObj({ ...user });\n    setUserObj(user);\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport firebase from \"myBase\";\nimport \"index.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}