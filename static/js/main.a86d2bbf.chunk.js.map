{"version":3,"sources":["myBase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/DarkModeToggle.js","components/AppRouter.js","components/App.js","reportWebVitals.js","index.js"],"names":["authService","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","userObj","refreshUser","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","setAttachment","newDisplayProfile","setNewDisplayProfile","getMyNweets","a","q","query","collection","where","uid","getDocs","forEach","doc","useEffect","onSubmit","event","preventDefault","updateProfile","attachmentUrl","fileRef","ref","uuidv4","uploadString","uploadFile","getDownloadURL","photoURL","fileInput","current","value","useRef","className","currentUser","src","for","icon","faPlus","id","type","accept","onChange","theFile","target","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","name","onClick","faTimes","autoFocus","placeholder","maxLength","marginTop","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","GithubAuthProvider","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","isOpen","setIsOpen","isMobile","useMediaQuery","isPc","onDeleteClick","window","confirm","deleteDoc","deleteObject","toggleEditing","updateDoc","toggleModal","e","StyledModal","Modal","styled","props","displayProfile","onBackgroundClick","onEscapeKeydown","class","faTrash","faPencilAlt","createdAt","NweetFactory","nweet","setNweet","attachment","d","Date","toUTCString","creatorId","addDoc","docRef","backgroundImage","Home","nweets","setNweets","orderBy","happend","onSnapshot","querySnapshot","newArray","docs","map","Navigation","display","justifyContent","to","marginRight","faUser","DarkModeToggle","darkMode","useDarkMode","htmlFor","checked","toggle","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a86d2bbf.chunk.js","sourcesContent":["// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\n// Add the Firebase products that you want to use\r\nimport { getAuth } from \"firebase/auth\";\r\nimport \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD7TPYIxWZnsMji2M24bTLZmaiG8tWF1pY\",\r\n  authDomain: \"nwitter-8922d.firebaseapp.com\",\r\n  projectId: \"nwitter-8922d\",\r\n  storageBucket: \"nwitter-8922d.appspot.com\",\r\n  messagingSenderId: \"97782376043\",\r\n  appId: \"1:97782376043:web:6278ef328086fbaa50b32e\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n// export const firebaseInstance = firebase;\r\nexport const authService = getAuth();\r\n\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();\r\n","import { authService, dbService, storageService } from \"myBase\";\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { collection, getDocs, query, where } from \"@firebase/firestore\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\n\r\nimport {\r\n  ref,\r\n  uploadString,\r\n  getDownloadURL,\r\n  deleteObject,\r\n} from \"@firebase/storage\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const [newDisplayProfile, setNewDisplayProfile] = useState(\"\");\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const getMyNweets = async () => {\r\n    const q = query(\r\n      collection(dbService, \"nweets\"),\r\n      where(\"creatorId\", \"==\", userObj.uid)\r\n    );\r\n\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      // console.log(doc.id, \" => \", doc.data());\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n    // console.log(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // 5.1 기존 이름과 새로 바꾼이름이 다를 떄만 업데이트\r\n    // 프로필 이미지도 바꿀수 있음! 나중에 시도각\r\n    if (\r\n      userObj.displayName !== newDisplayName ||\r\n      userObj.displayName === null\r\n    ) {\r\n      await updateProfile(userObj, { displayName: newDisplayName });\r\n      // await updateProfile(userObj, { photoURL: newDisplayProfile });\r\n      // await updateProfile(userObj, { attachment: setAttachment });\r\n      // console.log(`is user.displayName: ${userObj.displayName}`);\r\n    }\r\n\r\n    let attachmentUrl = \"\";\r\n    if (newDisplayProfile !== \"\") {\r\n      //파일 경로 참조 만들기\r\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      //storage 참조 경로로 파일 업로드 하기\r\n      const uploadFile = await uploadString(\r\n        fileRef,\r\n        newDisplayProfile,\r\n        \"data_url\"\r\n      );\r\n      //storage에 있는 파일 URL로 다운로드 받기\r\n      attachmentUrl = await getDownloadURL(uploadFile.ref);\r\n      // console.log(attachmentUrl);\r\n\r\n      await updateProfile(userObj, { photoURL: attachmentUrl });\r\n\r\n      // console.log(`is user.displayProfile: ${userObj.displayProfile}`);\r\n    }\r\n    // 미리보기는 해제\r\n    fileInput.current.value = \"\";\r\n    setNewDisplayProfile(\"\");\r\n    refreshUser();\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      // console.log(finishedEvent);\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setNewDisplayProfile(result);\r\n      setAttachment(result);\r\n    };\r\n    // console.log(theFile);\r\n    reader.readAsDataURL(theFile);\r\n\r\n    // 09.18 사용자 프로필\r\n    // setNewDisplayProfile()\r\n  };\r\n  const onClearAttachment = () => {\r\n    fileInput.current.value = \"\";\r\n    setAttachment(\"\");\r\n    setNewDisplayProfile(\"\");\r\n  };\r\n  const fileInput = useRef();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        {/* 09.18 사용자의 프로필 사진 */}\r\n        {/* 09.18 사용자에게 기본 프로필이 있을경우 : 없을경우 */}\r\n        {authService.currentUser.photoURL ? (\r\n          <img\r\n            src={authService.currentUser.photoURL}\r\n            className=\"currentPhotoTrue\"\r\n            // for=\"attach-file\"\r\n            // onClick={}\r\n          />\r\n        ) : (\r\n          <div\r\n            className=\"currentPhotoFalse\"\r\n            // for=\"attach-file\"\r\n          >\r\n            <i className=\"far fa-user fa-4x\"></i>\r\n          </div>\r\n        )}\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n          id=\"attach-file\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onFileChange}\r\n          style={{\r\n            opacity: 0,\r\n          }}\r\n          ref={fileInput}\r\n          name=\"newDisplayProfile\"\r\n        />\r\n        {newDisplayProfile && (\r\n          <>\r\n            <img src={newDisplayProfile} className=\"newPhotoTrue\" />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n              <span>Remove</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* https://basketdeveloper.tistory.com/70  참고*/}\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display Name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n          maxLength={30}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"@firebase/auth\";\r\nimport { authService } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // 회원가입이 필요할 때\r\n        data = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // 로그인이 필요할 떄\r\n        data = await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n          required\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { authService } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\nimport \"firebase/auth\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  GithubAuthProvider,\r\n  GoogleAuthProvider,\r\n  signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n} from \"@firebase/auth\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n// 다음과 같이 정의를 해두면 자동import가 됨\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    const auth = getAuth();\r\n    // const providerGoogle = new GoogleAuthProvider();\r\n    // const providerGithub = new GithubAuthProvider();\r\n    try {\r\n      if (name === \"google\") {\r\n        provider = new GoogleAuthProvider();\r\n        const result = await signInWithPopup(authService, provider);\r\n        // const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n      } else if (name === \"github\") {\r\n        provider = new GithubAuthProvider();\r\n        const result = await signInWithPopup(authService, provider);\r\n        // const credential = GithubAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n      }\r\n\r\n      // const data = await signInWithPopup(provider);\r\n      // console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />{\" \"}\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>{\" \"}\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />{\" \"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"myBase\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport {\r\n  ref,\r\n  uploadString,\r\n  getDownloadURL,\r\n  deleteObject,\r\n} from \"@firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { authService } from \"myBase\";\r\n// 09.17 modal update\r\nimport { ModalProvider } from \"styled-react-modal\";\r\nimport Modal from \"styled-react-modal\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner, displayName }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 800px)\" });\r\n  const isPc = useMediaQuery({\r\n    query: \"(min-width:800px)\",\r\n  });\r\n\r\n  const [likeCnt, setLikeCnt] = useState(0);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete?\");\r\n    if (ok) {\r\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\r\n      await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const toggleModal = (e) => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const onLike = (event) => {\r\n    setLikeCnt(likeCnt + 1);\r\n  };\r\n\r\n  const StyledModal = Modal.styled`\r\n  display: flex;\r\n  margin: auto;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1;\r\n  opacity: ${(props) => props.opacity};\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  \r\n`;\r\n  return (\r\n    <div>\r\n      {isPc && (\r\n        <div className=\"nweet_PC\">\r\n          {editing ? (\r\n            <>\r\n              {/* ! 트윗 내용 변경시 */}\r\n              {isOwner && (\r\n                <>\r\n                  <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Edit your nweet\"\r\n                      value={newNweet}\r\n                      required\r\n                      autoFocus\r\n                      onChange={onChange}\r\n                      className=\"formInput\"\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Update Nweet\"\r\n                      className=\"formBtn\"\r\n                    />\r\n                  </form>\r\n                  <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                  </span>{\" \"}\r\n                </>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {/* 09.19유저의 프로필 */}\r\n              <span className=\"authorProfile\">\r\n                {/* 09.19유저의 프로필 */}\r\n                {nweetObj.displayProfile ? (\r\n                  <img src={nweetObj.displayProfile} className=\"authorPhoto\" />\r\n                ) : (\r\n                  <div\r\n                    className=\"currentPhotoFalse\"\r\n                    // for=\"attach-file\"\r\n                  >\r\n                    <i className=\"far fa-user fa-2x\"></i>\r\n                  </div>\r\n                )}\r\n                {/* ! 자신이 작성된 트윗을 보여줄 경우 */}\r\n                <span className=\"author\">{`${nweetObj.displayName}`}</span>\r\n              </span>\r\n              <h4 className=\"nweetText\">{nweetObj.text}</h4>\r\n              {nweetObj.attachmentUrl && (\r\n                <>\r\n                  <img\r\n                    src={nweetObj.attachmentUrl}\r\n                    onClick={toggleModal}\r\n                    className=\"nweetImg\"\r\n                  />\r\n\r\n                  <ModalProvider>\r\n                    <div className=\"newModal\">\r\n                      <StyledModal\r\n                        isOpen={isOpen}\r\n                        onBackgroundClick={toggleModal}\r\n                        onEscapeKeydown={toggleModal}\r\n                      >\r\n                        <img\r\n                          src={nweetObj.attachmentUrl}\r\n                          className=\"modalImg\"\r\n                        />\r\n                        <button onClick={toggleModal} id=\"modalCloseBtn\">\r\n                          <i class=\"fas fa-times fa-2x\" id=\"closeModal\"></i>\r\n                        </button>\r\n                      </StyledModal>\r\n                    </div>\r\n                  </ModalProvider>\r\n                </>\r\n              )}\r\n              {isOwner && (\r\n                <div className=\"nweet__actions\">\r\n                  <span onClick={onDeleteClick}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                  </span>\r\n                  <span onClick={toggleEditing}>\r\n                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n      {isMobile && (\r\n        <div className=\"nweet\">\r\n          {editing ? (\r\n            <>\r\n              {/* ! 트윗 내용 변경시 */}\r\n              {isOwner && (\r\n                <>\r\n                  <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Edit your nweet\"\r\n                      value={newNweet}\r\n                      required\r\n                      autoFocus\r\n                      onChange={onChange}\r\n                      className=\"formInput\"\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Update Nweet\"\r\n                      className=\"formBtn\"\r\n                    />\r\n                  </form>\r\n                  <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                  </span>{\" \"}\r\n                </>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span className=\"authorProfile\">\r\n                {/* 09.19유저의 프로필 */}\r\n                <img src={nweetObj.displayProfile} className=\"authorPhoto\" />\r\n                {/* ! 자신이 작성된 트윗을 보여줄 경우 */}\r\n                <span className=\"author\">{`${nweetObj.displayName}`}</span>\r\n              </span>\r\n              <div className=\"nweetText\">{nweetObj.text}</div>\r\n              {nweetObj.attachmentUrl && (\r\n                <>\r\n                  <img\r\n                    src={nweetObj.attachmentUrl}\r\n                    onClick={toggleModal}\r\n                    className=\"nweetImg\"\r\n                  />\r\n\r\n                  <ModalProvider>\r\n                    <div className=\"newModal\">\r\n                      <StyledModal\r\n                        isOpen={isOpen}\r\n                        onBackgroundClick={toggleModal}\r\n                        onEscapeKeydown={toggleModal}\r\n                      >\r\n                        <img\r\n                          src={nweetObj.attachmentUrl}\r\n                          className=\"modalImg\"\r\n                        ></img>\r\n                        <button onClick={toggleModal} id=\"modalCloseBtn\">\r\n                          <i class=\"fas fa-times fa-2x\" id=\"closeModal\"></i>\r\n                        </button>\r\n                      </StyledModal>\r\n                    </div>\r\n                  </ModalProvider>\r\n                </>\r\n              )}\r\n              <div className=\"nweetTime\">{`${nweetObj.createdAt}`}</div>\r\n\r\n              {isOwner && (\r\n                <div className=\"nweet__actions\">\r\n                  <span onClick={onDeleteClick}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                  </span>\r\n                  <span onClick={toggleEditing}>\r\n                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                  </span>\r\n                </div>\r\n              )}\r\n\r\n              {/* <button onClick={onLike}>{likeCnt}</button> */}\r\n            </>\r\n          )}\r\n        </div>\r\n      )}{\" \"}\r\n    </div>\r\n  );\r\n};\r\nexport default Nweet;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { dbService, storageService, authService } from \"myBase\";\r\nimport { addDoc, collection, Timestamp } from \"firebase/firestore\";\r\nimport {\r\n  ref,\r\n  uploadString,\r\n  getDownloadURL,\r\n  deleteObject,\r\n} from \"@firebase/storage\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      //파일 경로 참조 만들기\r\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      //storage 참조 경로로 파일 업로드 하기\r\n      const uploadFile = await uploadString(fileRef, attachment, \"data_url\");\r\n      console.log(uploadFile);\r\n      //storage에 있는 파일 URL로 다운로드 받기\r\n      attachmentUrl = await getDownloadURL(uploadFile.ref);\r\n    }\r\n    let d = new Date();\r\n\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: d.toUTCString(),\r\n      creatorId: userObj.uid,\r\n      // 09.15 파이어베이스로부터 해당 트윗의 작성자를 불러옴!\r\n      displayName: authService.currentUser.displayName,\r\n      // 09.18 프로필 사진은 photoURL!!!!!!!!!!\r\n      displayProfile: authService.currentUser.photoURL,\r\n      attachmentUrl,\r\n    };\r\n    console.log(`current user: ${authService.currentUser}`);\r\n    try {\r\n      const docRef = await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n      console.log(\"Document written with ID: \", docRef.id);\r\n    } catch (error) {\r\n      console.error(\"Error adding document: \", error);\r\n    }\r\n\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    // event내에 있는 target.value를 가져와라\r\n    setNweet(value);\r\n    // let myTime = Timestamp.fromDate(new Date());\r\n    // let d = new Date();\r\n    // console.log(d);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      // console.log(finishedEvent);\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    fileInput.current.value = \"\";\r\n    setAttachment(\"\");\r\n  };\r\n  const fileInput = useRef();\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      {/* 4.0 파일 업로드 */}\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n        ref={fileInput}\r\n      />\r\n      <input type=\"submit\" value=\"Nweet\" />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  collection,\r\n  orderBy,\r\n  onSnapshot,\r\n  getFirestore,\r\n  query,\r\n} from \"firebase/firestore\";\r\nimport Nweet from \"../components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport Profile from \"./Profile\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  //   const getNweets = async () => {\r\n  //     const dbNweets = await getDocs(collection(dbService, \"nweets\"));\r\n  //     dbNweets.forEach((document) => {\r\n  //       console.log(document.data());\r\n  //       const nweetObject = { ...document.data(), id: document.id };\r\n  //       setNweets((prev) => [nweetObject, ...prev]);\r\n  //       // 이전 데이터 호출\r\n  //     });\r\n  // console.log(dbNweets);\r\n  //   };\r\n\r\n  // 3.4 snpshot를 통해 query를 쓰는것보다 실시간으로 빠르게 정보가 전달됨\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(getFirestore(), \"nweets\"),\r\n      orderBy(\"createdAt\", \"desc\")\r\n    );\r\n    const happend = onSnapshot(q, (querySnapshot) => {\r\n      const newArray = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(newArray);\r\n      console.log(newArray);\r\n    });\r\n    return () => {\r\n      happend();\r\n    };\r\n  }, []);\r\n\r\n  //09.17 media query\r\n\r\n  return (\r\n    // 09.14 displayName은 트윗의 작성자를 나타냄\r\n    <div className=\"contaer\">\r\n      {\r\n        // isMobile &&\r\n        <>\r\n          <NweetFactory userObj={userObj}></NweetFactory>\r\n          <div style={{ marginTop: 30 }}>\r\n            {nweets.map((nweet) => (\r\n              <>\r\n                <Nweet\r\n                  key={nweet.id}\r\n                  nweetObj={nweet}\r\n                  isOwner={nweet.creatorId === userObj.uid}\r\n                  displayName={nweet.displayName}\r\n                />\r\n                {/* <Profile CID={nweet.creatorId} /> */}\r\n              </>\r\n            ))}\r\n          </div>\r\n        </>\r\n      }\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }} className=\"icon nwitter\">\r\n          <div className=\"tooltip\">Home</div>\r\n          {/* <i class=\"faTwitter fa-3x\"></i> */}\r\n          <FontAwesomeIcon\r\n            icon={faTwitter}\r\n            color={\"#04AAFF\"}\r\n            size=\"2x\"\r\n            className=\"nwitterIcon\"\r\n          />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\" className=\"icon profile\">\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span className=\"tooltip\">\r\n            {userObj.displayName ? `${userObj.displayName}` : \"Profile\"}\r\n            {/* 이름이 존재할경우에 앞에 글자추가 */}\r\n          </span>\r\n        </Link>{\" \"}\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport useDarkMode from \"use-dark-mode\";\r\n\r\nconst DarkModeToggle = () => {\r\n  const darkMode = useDarkMode(false);\r\n\r\n  return (\r\n    <label className=\"toggle-wrapper\" htmlFor=\"toggle\">\r\n      <div>\r\n        {/* <button type=\"button\" onClick={darkMode.disable}>\r\n          ☀\r\n        </button> */}\r\n        {/* <Toggle checked={darkMode.value} onChange={darkMode.toggle} /> */}\r\n        {/* <button type=\"button\" onClick={darkMode.enable}>\r\n          ☾\r\n        </button> */}\r\n        <button\r\n          checked={darkMode.value}\r\n          type=\"button\"\r\n          onClick={darkMode.toggle}\r\n          class=\"darkToggleBtn\"\r\n        >\r\n          {darkMode.value ? (\r\n            <i class=\"far fa-lightbulb fa-3x\" id=\"lightbulb\"></i>\r\n          ) : (\r\n            <i class=\"far fa-lightbulb fa-3x\" id=\"darkbulb\"></i>\r\n          )}\r\n        </button>\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default DarkModeToggle;\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\nimport { Redirect } from \"react-router\";\r\nimport DarkModeToggle from \"components/DarkModeToggle\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n              <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n            {/* 로그아웃시 profile에 머물지 않고 Home로 이동하게 */}\r\n          </>\r\n        )}\r\n      </Switch>\r\n      <DarkModeToggle />\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/AppRouter\";\nimport { authService } from \"myBase\";\nimport { updateProfile } from \"@firebase/auth\";\n// import MediaQuery, { useMediaQuery } from \"react-responsive\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  // 2.4 로그인과 회원가입 여부 판별, 로그인시 footer가 home\n  const [init, setInit] = useState(false);\n  //  1.2 로그인이 되있으면 home, 안되있으면 Auth\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  // const isPC = useMediaQuery({\n  //   query: \"(min-width: 1024px)\",\n  // });\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        // setIsLoggedIn(true);\n        //5.2 user는 필요이상의 정보를 가진 object이기 떄문에, 필요한 정보만 이동\n\n        setUserObj(user);\n        if (user.displayName === null) {\n          // setUserObj({ displayName: \"Nwitter\" });\n        }\n      } else {\n        // 6.0 로그아웃이 정상적으로 작동하기위해 조건문\n        setUserObj(null);\n      }\n      // console.log(user);\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    // setUserObj({\n    //   displayName: user.displayName,\n    //   uid: user.uid,\n    //   updateProfile: (args) => user.updateProfile(args),\n    // });\n\n    // setUserObj({ displayName: \"BS\" });\n    setUserObj({ ...user });\n    setUserObj(user);\n\n    // 09.15 현재 로그인된 유저의 이름\n    // console.log(authService.currentUser.displayName);\n  };\n\n  return (\n    <BrowserRouter>\n      {init ? (\n        <>\n          <AppRouter\n            refreshUser={refreshUser}\n            isLoggedIn={Boolean(userObj)}\n            userObj={userObj}\n          ></AppRouter>\n        </>\n      ) : (\n        <>\n          <div className=\"refreshContainer\">\n            <i className=\"fa fa-refresh fa-spin fa-3x fa-fw\"></i>\n            <span className=\"sr-only\">Initializing...</span>\n          </div>\n        </>\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </BrowserRouter>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport firebase from \"myBase\";\n\nimport \"index.css\";\nimport \"index_PC.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// https://www.npmjs.com/package/react-modal\n// use now!!!!!!!\n"],"sourceRoot":""}